/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package compuworkhr.presentacion;

/**
 *
 * @author Laura.Garcia
 */

import compuworkhr.controlador.DepartamentoControlador;
import compuworkhr.controlador.EmpleadoControlador;
import compuworkhr.logica.Departamento;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class DepartamentoLandingPage extends javax.swing.JFrame {

    private DepartamentoControlador departamentoControlador;
    private DefaultTableModel modelo;
    private EmpleadoControlador empCtrl;

   
    public DepartamentoLandingPage(DepartamentoControlador departamentoControlador) {
        this.departamentoControlador = departamentoControlador;
        initComponents();
        inicializarTabla();
        cargarDatos();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        btnCrear = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaDepartamentos = new javax.swing.JTable();
        btnVolverHome = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        labelNombreModulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnCrear.setText("Crear");
        btnCrear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCrearMouseClicked(evt);
            }
        });
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        tablaDepartamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaDepartamentos);
        if (tablaDepartamentos.getColumnModel().getColumnCount() > 0) {
            tablaDepartamentos.getColumnModel().getColumn(0).setResizable(false);
            tablaDepartamentos.getColumnModel().getColumn(1).setResizable(false);
        }

        btnVolverHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Home.png"))); // NOI18N
        btnVolverHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverHomeActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 0, 153));

        labelNombreModulo.setFont(new java.awt.Font("Segoe UI Black", 3, 18)); // NOI18N
        labelNombreModulo.setText("Departamentos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(labelNombreModulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(labelNombreModulo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnCrear)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(btnVolverHome))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(btnActualizar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEliminar)
                .addGap(32, 32, 32))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrear)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(btnVolverHome)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnCrearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCrearMouseClicked

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        CrearDepartamentoDialog dialog = new CrearDepartamentoDialog(this, true, departamentoControlador);
        dialog.setVisible(true);
        cargarDatos();
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        int filaSeleccionada = tablaDepartamentos.getSelectedRow();
        if (filaSeleccionada >= 0) {
            int id = (int) modelo.getValueAt(filaSeleccionada, 0);
            Departamento departamentoSeleccionado = departamentoControlador.buscarPorId(id);
            ActualizarDepartamentoDialog dialog = new ActualizarDepartamentoDialog(this, true, departamentoControlador, departamentoSeleccionado);
            dialog.setVisible(true);
            cargarDatos();
        } else {
        JOptionPane.showMessageDialog(this, "Por favor, seleccione el departamento en la tabla que desea actualizar");
    }
        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        {
        int filaSeleccionada = tablaDepartamentos.getSelectedRow();
        if (filaSeleccionada >=0){
            int id = (int) modelo.getValueAt(filaSeleccionada, 0);
            try{
                departamentoControlador.eliminarDepartamento(id);
                JOptionPane.showMessageDialog(this, "Departamento Eliminado correctamente");
                cargarDatos();
            } catch (Exception e){
                JOptionPane.showMessageDialog(this, "Error al Eliminar: " +e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un departamento para eliminar");
        }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnVolverHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverHomeActionPerformed
        PaginaPrincipal menu = new PaginaPrincipal(empCtrl, departamentoControlador);
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverHomeActionPerformed

    /**
     * @param args the command line arguments
     */
    


    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnVolverHome;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelNombreModulo;
    private javax.swing.JTable tablaDepartamentos;
    // End of variables declaration//GEN-END:variables

    private void inicializarTabla() {
        modelo = new DefaultTableModel(new Object[]{"ID", "Nombre", "Cargo", "Salario"}, 0);
        tablaDepartamentos.setModel(modelo);
    }
    
    // Método para cargar los datos de empleados en la tabla
    public void cargarDatos() {
        modelo.setRowCount(0);
        List<Departamento> lista = departamentoControlador.getAllDepartamentos();
        for (Departamento departamento : lista) {
            modelo.addRow(new Object[]{departamento.getId(), departamento.getNombre(), departamento.getEmpleados().size()});
        }
    }
    
}
